'''
Problem 44: Pentagon numbers

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

	1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

Analysis:
Let x be the number. If we solve the quadratic function, we have the following solution:
    
    n = (sqrt(24*x + 1) + 1 ) / 6
    
Next, we can define a function for checking the "pentagonality" of the number.    
'''

import time, math

def compute():
    result = 0
    not_found = True
    i = 1
    k = 0
    while not_found:
        i += 1
        n = i * (3 * i - 1) / 2
        for j in range(i - 1, 0, -1):
            m = j * (3 * j - 1) / 2
            if is_pentagonal(n - m) and is_pentagonal(n + m):
                result = int(n - m)
                k = j
                not_found = False
                break
    return (i, k, result)
    

def is_pentagonal(num):
    pen = (math.sqrt(24*num + 1) + 1) / 6
    return pen == int(pen)

    
if __name__ == "__main__":
    t1 = time.time()
    res = compute()
    print("k = " , res[0])
    print("j = " , res[1])
    print("D = " , res[2])
    print()
    t2 = time.time()
    print("Time elapsed:", t2 - t1, "seconds")
    
    
# end